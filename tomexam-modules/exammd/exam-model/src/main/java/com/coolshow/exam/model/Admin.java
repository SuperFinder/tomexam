package com.coolshow.exam.model;

import com.coolshow.exam.model.base.BaseAdmin;
import com.jfinal.plugin.activerecord.Db;

import java.util.List;


/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Admin extends BaseAdmin<Admin> {
  public static final Admin dao = new Admin().dao();

  /**
   * .
   *
   * @return 返回管理员列表
   */
  public List getAdmins() {
    return dao.find(getSql("Admin.findAll"));
  }

  /**
   * .
   * @param deptId 部门id
   * @return 部门列表
   */

  public List findByDept(String deptId) {
    return dao.find(getSql("findByDept"), deptId);
  }

  /**
   * .
   *
   * @param id 管理员id
   * @return 某管理员
   */
  public List findById(Integer id) {
    return dao.find(getSql("Admin.findById"), id);
  }

  /**
   * .
   *
   * @param userName 用户名
   * @return 某管理员
   */
  public List findByName(String userName) {
    return dao.find(getSql("findByName"), userName, "1");
  }

  /**
   * 以管理员账号密码查找管理员
   *
   * @param username 用户名
   * @param userpass 用户密码
   * @return 某管理员
   */
  public List findByPass(String username, String userpass) {
    return dao.find(getSql("findByPass"), username, userpass);
  }

  /***
   *.
   * @param admin
   * @return 增加管理员
   */
  public Integer addAdmin(Admin admin) {

    String sql = "insert into tm_admin(username,departmentid,userpass,status,roleid,realname,mobi,"
        + "remark,logIntegerimes,lastlogin) values(?,?,?,?,?,?,?,?,0,"
        + 1111111 + ")";
    return Db.update(sql, admin.getUsername(), admin.getDepartmentid(), admin.getUserpass(),
        admin.getStatus(), admin.getRoleid(), admin.getRealname(), admin.getMobi(),
        admin.getRemark()
    );
  }

  /***
   * @param username 用户名
   * @param roleid 权限id
   * @param status 状态
   * @return 添加管理员
   */
  public Integer addAdmin(String username, String roleid, String status) {
    String sql = "insert into tm_admin (username,roleid,status) values (?,?,?)";
    return Db.update(sql, username, roleid, status);
  }


  /**
   * /修改管理员，顺便改密码
   *
   * @return
   * @throws Exception
   */
  public Integer updateAdmin(Admin admin) {
    String sql = "update tm_admin set userpass = ?, status = ?, roleid = ?, realname = ?, mobi = ? ," +
        " remark = ? where id = ?";
    return Db.update(sql, admin.getUserpass(), admin.getStatus(), admin.getRoleid(),
        admin.getRealname(), admin.getMobi(), admin.getRemark(), admin.getId());
  }

  /**
   * 修改管理员，不改密码
   *
   * @return
   * @throws Exception
   */
  public Integer updateAdminNoPassword(Admin admin) {
    String sql = "update tm_admin set status = ?, roleid = ?, realname = ?, mobi = ? , remark = ? "
        + "where id = ?";
    return Db.update(sql, admin.getStatus(), admin.getRoleid(), admin.getRealname(), admin.getMobi()
        , admin.getRemark(), admin.getId());
  }

  /**
   * 修改管理员
   *
   * @param id
   * @param status
   * @param roleid
   * @param remark
   * @return
   * @throws Exception
   */
  public Integer updateShortAdmin(Integer id, String status, Integer roleid, String remark) {
    String sql = "update tm_admin set status = ?, roleid = ?, remark = ? where id = ?";
    return Db.update(sql, status, roleid, remark, id);
  }


  /**
   * 修改上次登陆时间和总登录次数
   *
   * @param id
   * @return
   * @throws Exception
   */
  public Integer updateLastLogin(Integer id) {
    String sql = "update tm_admin set lastlogin = " + 1111111 +
        ",logIntegerimes=(logIntegerimes+1) where id = ?";
    return Db.update(sql, id);
  }


  /**
   * 依照id删除管理员
   *
   * @param id
   * @return
   * @throws Exception
   */
  public Integer deleteAdminById(Integer id) {
    String sql = "delete from tm_admin where id = ?";
    return Db.update(sql, id);
  }
}
