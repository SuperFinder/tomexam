package com.coolshow.exam.model;

import com.coolshow.exam.common.Singleton;
import com.coolshow.exam.model.base.BaseQuestionDb;
import com.jfinal.plugin.activerecord.Db;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class QuestionDb extends BaseQuestionDb<QuestionDb> {
  private static final QuestionDb dao = Singleton.getInstance().getSingletonObject(QuestionDb.class)
      .dao();

  /**
   * .
   *
   * @param questionDb 问题库
   * @return 添加
   */

  //todo 系统时间
  public Integer add(QuestionDb questionDb) {
    return Db.update(getSql("questionDb.add"), questionDb.getDname(), questionDb.getCheckself(),
        questionDb.getRemark(), questionDb.getAdminid(), questionDb.getCdate(), questionDb.getStatus(),
        questionDb.getDepartmentid());
  }


  /**
   * .
   *
   * @param questionDb 问题库
   * @return 修改
   */
  public Integer update(QuestionDb questionDb) {
    return Db.update(getSql("questionDb.update"), questionDb.getDname(),
        questionDb.getCheckself(), questionDb.getRemark(), questionDb.getStatus(), questionDb.getId());
  }

  /**
   * .
   *
   * @param id id
   * @return 删除问题库
   */
  public Integer delete(Integer id) {
    return Db.update(getSql("questionDb.delete"), id);
  }


  /**
   * .
   *
   * @param status 状态
   * @return 根据状态部门和自检获取问题库列表
   */

  public List DbByCheck(String status) {
    return dao.find(getSql("questionDb.DbByCheck"), status);

  }


  /**
   * .
   *
   * @param status       状态
   * @param departmentId 部门id
   * @return 根据部门自获取问题库
   */
  public List DbByDept(String status, String departmentId) {
    return dao.find(getSql("questionDb.DbByDept"), status, departmentId);
  }

  /**
   * .
   *
   * @param status 状态
   * @return 根据状态获取问题库
   */
  public List findDb(String status) {
    String sql = "select * from tm_question_db where status=? order by id desc";
    return dao.find(sql, status);
  }

  /**
   * 根据id获取问题库
   *
   * @param id
   * @return
   */
  public List findDbById(Integer id) {
    String sql = "select * from tm_question_db where id = ?";
    return dao.find(sql, id);
  }


}
