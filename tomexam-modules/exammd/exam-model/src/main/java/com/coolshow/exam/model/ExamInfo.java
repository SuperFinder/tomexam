package com.coolshow.exam.model;

import com.coolshow.exam.common.Singleton;
import com.coolshow.exam.model.base.BaseExamInfo;
import com.jfinal.kit.Kv;
import com.jfinal.plugin.activerecord.SqlPara;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class ExamInfo extends BaseExamInfo<ExamInfo> {
  public static final ExamInfo dao = Singleton.getInstance().getSingletonObject(ExamInfo.class).dao();

  /**
   * 依照试卷id，查出该试卷相关信息，分别是
   * 试卷本体详细信息
   * total_people  参考人数
   * pass_num   通过人数
   * not_pass_num  未通过人数
   * max_score   最高分
   * min_score   最低分
   * avg_score  平均分
   * pass_score   及格分数
   *
   * @param pid
   * @return
   */
  public List analyze(Integer pid) {
    Kv cond = Kv.by("pid", pid);
    SqlPara sp = getSqlPara("examInfo.analyze", cond);
    return dao.find(sp);
  }

  //todo
  public List getPaperChart(String[] from, String[] to, String pid) {
//        StringBuffer sb = new StringBuffer();
//        if ((from != null) && (from.length > 0)) {
//            for (int i = 0; i < from.length; i++) {
//                sb.append("select '" + from[i] + "' tfrom,'" + to[i] + "' tto,"
//                        + "(select count(*) from tm_exam_info where pid=" + pid + " and score>=" + from[i]
//                        + " and score<" + to[i] + ") total ");
//                if (i < from.length - 1) {
//                    sb.append(" union ");
//                }
//            }
//        }
//        return query(sb.toString());
    return null;
  }

  public List examNum(Integer pid) {
    return dao.find(getSql("examInfo.examNum"), pid);
  }
}
