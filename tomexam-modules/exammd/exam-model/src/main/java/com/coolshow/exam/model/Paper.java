package com.coolshow.exam.model;

import com.coolshow.exam.common.Singleton;
import com.coolshow.exam.model.base.BasePaper;
import com.jfinal.plugin.activerecord.Db;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Paper extends BasePaper<Paper> {
  private static final Paper dao = Singleton.getInstance().getSingletonObject(Paper.class).dao();

  /**
   * .
   *
   * @param paper 试卷
   * @return 添加试卷
   */
  public Integer add(Paper paper) {
    return Db.update(getSql("paper.add"), paper.getPaperName(), paper.getAdminid(),
        paper.getDepartmentid(), paper.getStatus(), paper.getStarttime(), paper.getEndtime(),
        paper.getPaperMinute(), paper.getTotalScore(), paper.getRemark(), paper.getQorder(),
        paper.getPostdate(), paper.getShowScore(), paper.getIsranpaper());
  }

  /**
   * .
   *
   * @param paper 试卷
   * @return 添加试卷和答案
   */
  public Integer addByGen(Paper paper) {
    return Db.update(getSql("online.addByGen"), paper.getPaperName(), paper.getAdminid(),
        paper.getDepartmentid(), paper.getStatus(), paper.getStarttime(), paper.getEndtime(),
        paper.getPaperMinute(), paper.getTotalScore(), paper.getRemark(), paper.getQorder(),
        paper.getPostdate(), paper.getShowScore(), paper.getIsranpaper());
  }

  /**
   * .
   *
   * @param id id
   * @return 根据id取试卷
   */
  public List findById(Integer id) {
    return dao.find(getSql("paper.findById"), id);
  }

  /**
   * .
   *
   * @param paper
   * @return 修改试卷
   */
  public Integer update(Paper paper) {
    return Db.update(getSql("paper.update"), paper.getPaperName(), paper.getStatus(),
        paper.getStarttime(), paper.getEndtime(), paper.getPaperMinute(), paper.getRemark(),
        paper.getQorder(), paper.getShowScore(), paper.getIsranpaper(), paper.getId());
  }

  /**
   * .
   *
   * @param id 删除试卷id
   * @return 删除试卷
   */
  public Integer delete(Integer id) {
    return Db.update(getSql("paper.deletee"), id);
  }

  /**
   * .
   *
   * @param id 删除试卷id
   * @return 逻辑删除试卷
   */
  public Integer loginDelete(Integer id) {
    return Db.update(getSql("paper.loginDelete"), id);
  }

  /**
   * .
   *
   * @param pid        试卷id
   * @param totalScore 试卷总分
   * @return
   */
  public Integer updateScore(Integer totalScore, Integer pid) {
    return Db.update(getSql("paper.updateScore"), totalScore, pid);
  }
}
